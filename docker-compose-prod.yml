version: '3.9'
services:

  manager_api:
    container_name: man_api
    build:
      context: .
      dockerfile: ./manager/Dockerfile
    restart: always
    depends_on:
      - db
    environment:
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - AWS_KEY_ID=${AWS_KEY_ID}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
    volumes:
      - static-data:/vol/app
    networks:
      - api-network

  db:
    container_name: man_db
    image: mysql:5.7.22
    restart: always
    environment:
      MYSQL_DATABASE: django_admin
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_TCP_PORT: 3306
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3302:3306"
    networks:
      - api-network

  proxy:
    container_name: man_proxy
    build:
      context: ./proxy
    restart: always
    depends_on:
      - manager_api
    ports:
      - 8004:8000
    volumes:
      - static-data:/vol/static
    networks:
      - api-network


networks:
  api-network:
    driver: bridge  # Use a bridge network for the containers


volumes:
  static-data:
  mysql-data: